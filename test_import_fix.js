#!/usr/bin/env node
/**
 * Script de test pour v√©rifier que l'erreur d'importation est r√©solue
 */

const fs = require('fs');
const path = require('path');

function checkImportFix() {
  console.log('üîç V√©rification de la correction de l\'erreur d\'importation...');
  
  // V√©rifier que userDataPersistence est export√© depuis mediaService.ts
  const mediaServicePath = path.join(__dirname, 'src/services/mediaService.ts');
  
  if (!fs.existsSync(mediaServicePath)) {
    console.log('‚ùå Fichier mediaService.ts non trouv√©');
    return false;
  }
  
  const mediaServiceContent = fs.readFileSync(mediaServicePath, 'utf8');
  
  if (mediaServiceContent.includes('export const userDataPersistence')) {
    console.log('‚úÖ userDataPersistence est export√© depuis mediaService.ts');
  } else {
    console.log('‚ùå userDataPersistence n\'est pas export√© depuis mediaService.ts');
    return false;
  }
  
  // V√©rifier que les fonctions n√©cessaires existent
  if (mediaServiceContent.includes('savePirogueImages')) {
    console.log('‚úÖ Fonction savePirogueImages trouv√©e');
  } else {
    console.log('‚ùå Fonction savePirogueImages manquante');
    return false;
  }
  
  if (mediaServiceContent.includes('syncLocalData')) {
    console.log('‚úÖ Fonction syncLocalData trouv√©e');
  } else {
    console.log('‚ùå Fonction syncLocalData manquante');
    return false;
  }
  
  // V√©rifier que PirogueForm.tsx importe correctement
  const pirogueFormPath = path.join(__dirname, 'src/components/PirogueForm.tsx');
  
  if (!fs.existsSync(pirogueFormPath)) {
    console.log('‚ùå Fichier PirogueForm.tsx non trouv√©');
    return false;
  }
  
  const pirogueFormContent = fs.readFileSync(pirogueFormPath, 'utf8');
  
  if (pirogueFormContent.includes("import { userDataPersistence } from '../services/mediaService'")) {
    console.log('‚úÖ PirogueForm.tsx importe userDataPersistence correctement');
  } else {
    console.log('‚ùå Import incorrect dans PirogueForm.tsx');
    return false;
  }
  
  // V√©rifier que Layout.tsx importe correctement
  const layoutPath = path.join(__dirname, 'src/components/Layout.tsx');
  
  if (!fs.existsSync(layoutPath)) {
    console.log('‚ùå Fichier Layout.tsx non trouv√©');
    return false;
  }
  
  const layoutContent = fs.readFileSync(layoutPath, 'utf8');
  
  if (layoutContent.includes("import { userDataPersistence } from '../services/mediaService'")) {
    console.log('‚úÖ Layout.tsx importe userDataPersistence correctement');
  } else {
    console.log('‚ùå Import incorrect dans Layout.tsx');
    return false;
  }
  
  return true;
}

function main() {
  console.log('üöÄ Test de correction de l\'erreur d\'importation');
  console.log('=' * 50);
  
  const isFixed = checkImportFix();
  
  console.log('\n' + '=' * 50);
  if (isFixed) {
    console.log('üéâ L\'erreur d\'importation a √©t√© corrig√©e !');
    console.log('\nüìã R√©sum√©:');
    console.log('   ‚úÖ userDataPersistence est export√© depuis mediaService.ts');
    console.log('   ‚úÖ Les fonctions savePirogueImages et syncLocalData existent');
    console.log('   ‚úÖ Les imports dans PirogueForm.tsx et Layout.tsx sont corrects');
    console.log('\nüåê Le serveur de d√©veloppement devrait maintenant fonctionner sans erreur.');
  } else {
    console.log('‚ùå Des probl√®mes persistent. V√©rifiez les modifications.');
  }
}

if (require.main === module) {
  main();
}
