# Generated by Django 5.0.1 on 2025-09-10 14:31

import apps.media.models
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MediaCollection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Nom de la collection", max_length=255),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description de la collection", null=True
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=True, help_text="Collection visible par tous"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_collections",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Collection Média",
                "verbose_name_plural": "Collections Médias",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MediaFile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(help_text="Nom du fichier", max_length=255)),
                (
                    "original_name",
                    models.CharField(
                        help_text="Nom original du fichier", max_length=255
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        help_text="Fichier uploadé",
                        upload_to=apps.media.models.media_upload_path,
                    ),
                ),
                (
                    "media_type",
                    models.CharField(
                        choices=[
                            ("image", "Image"),
                            ("video", "Vidéo"),
                            ("document", "Document"),
                            ("audio", "Audio"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("fishing", "Pêche"),
                            ("boats", "Bateaux"),
                            ("ports", "Ports"),
                            ("weather", "Météo"),
                            ("events", "Événements"),
                            ("zones", "Zones"),
                            ("balises", "Balises"),
                            ("other", "Autre"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                (
                    "size",
                    models.BigIntegerField(help_text="Taille du fichier en octets"),
                ),
                (
                    "mime_type",
                    models.CharField(help_text="Type MIME du fichier", max_length=100),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description du fichier", null=True
                    ),
                ),
                (
                    "tags",
                    models.JSONField(
                        blank=True, default=list, help_text="Tags associés au fichier"
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        help_text="Latitude GPS",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        help_text="Longitude GPS",
                        max_digits=11,
                        null=True,
                    ),
                ),
                (
                    "location_name",
                    models.CharField(
                        blank=True, help_text="Nom du lieu", max_length=255, null=True
                    ),
                ),
                (
                    "width",
                    models.IntegerField(
                        blank=True, help_text="Largeur (pour images/vidéos)", null=True
                    ),
                ),
                (
                    "height",
                    models.IntegerField(
                        blank=True, help_text="Hauteur (pour images/vidéos)", null=True
                    ),
                ),
                (
                    "duration",
                    models.DurationField(
                        blank=True, help_text="Durée (pour vidéos/audio)", null=True
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=True, help_text="Fichier visible par tous"
                    ),
                ),
                (
                    "is_downloadable",
                    models.BooleanField(
                        default=True, help_text="Fichier téléchargeable"
                    ),
                ),
                (
                    "download_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Nombre de téléchargements"
                    ),
                ),
                (
                    "view_count",
                    models.PositiveIntegerField(default=0, help_text="Nombre de vues"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        help_text="Utilisateur qui a uploadé le fichier",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="uploaded_media",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Fichier Média",
                "verbose_name_plural": "Fichiers Médias",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MediaCollectionItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, help_text="Ordre d'affichage"
                    ),
                ),
                ("added_at", models.DateTimeField(auto_now_add=True)),
                (
                    "collection",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="media.mediacollection",
                    ),
                ),
                (
                    "media_file",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="media.mediafile",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "-added_at"],
            },
        ),
        migrations.AddField(
            model_name="mediacollection",
            name="media_files",
            field=models.ManyToManyField(
                related_name="collections",
                through="media.MediaCollectionItem",
                to="media.mediafile",
            ),
        ),
        migrations.AddIndex(
            model_name="mediafile",
            index=models.Index(
                fields=["media_type", "category"], name="media_media_media_t_bcdfeb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mediafile",
            index=models.Index(
                fields=["is_public", "is_downloadable"],
                name="media_media_is_publ_77a417_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="mediafile",
            index=models.Index(
                fields=["-created_at"], name="media_media_created_75ccac_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mediafile",
            index=models.Index(
                fields=["latitude", "longitude"], name="media_media_latitud_008ebf_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="mediacollectionitem",
            unique_together={("collection", "media_file")},
        ),
    ]
